#!/bin/sh

dir="${0%%/.notmuch/*}"
mbdir="${dir##*/}"
conf_file="${XDG_CONFIG_DIR:-${HOME}/.config}/notmuch/${mbdir}"
[ -f "${conf_file}" ] &&
    export NOTMUCH_CONFIG="${conf_file}"

notify_send() {
    osascript -e 'on run argv
    display notification item 1 of argv
end run' "$@"
}

case $(uname -s) in
    Darwin)
        notification=notify_send
        ;;
    Linux)
        notification="notify-send"
        ;;
esac

# Are we using gmail or not?
gmail=$(notmuch config get user.type 2>/dev/null)

# The folder that will be used for trash
trash=$(notmuch config get user.trash 2>/dev/null)
trash=${trash:-${gmail:+'[Gmail]/Trash'}}
trash=${trash:-'Trash'}
# The folder that will be used for archiving
archive=$(notmuch config get user.archive 2>/dev/null)
archive=${archive:-${gmail:+'[Gmail]/All Mail'}}
archive=${archive:-'Archive'}
# The folder that will be used for sent mail
sent=$(notmuch config get user.sent 2>/dev/null)
sent=${sent:-${gmail:+'[Gmail]/Sent Mail'}}
sent=${sent:-'Sent'}

tags="$(notmuch config get user.folder_tags 2>/dev/null)"

folder_to_tag() {
    # Usage: folder_to_tag "tag" "folder"
    folder="$2"
    tag="$1"
    notmuch tag "+${tag}" -- folder:"\"${folder}\"" and not "tag:${tag}"
}

ensure_tag_in_folder() {
    # Usage: ensure_tag_in_folder "tag" "folder"
    folder="$2"
    tag="$1"
    notmuch tag "-${tag}" -- "tag:${tag}" and not folder:"\"${folder}\""
}

# If its already in trash, remove it from the inbox
notmuch tag +deleted -inbox -- folder:"\"${trash}\""
# If its been sent, pass that on through
notmuch tag +sent -unread -- folder:"\"${sent}\"" and not tag:sent

# If it has been deleted from an inbox, make sure we remove it from
# the IMAP folder
notmuch search --output=files tag:inbox | grep 'T$' | xargs rm -f
# If its already been archived, mark it as such
notmuch tag +archive -inbox -- folder:"\"${archive}\"" and not folder:'"/(INBOX|.*@.*)/"' and not tag:archive
# If its not in an inbox, don't mark it as "inbox"
notmuch tag -inbox -- tag:inbox and not folder:'"/(INBOX|.*@.*)/"'

while IFS= read -r tag && [ -n "${tag}" ];
do
    folder_to_tag "${tag}" "$(notmuch config get user."${tag}")"
    ensure_tag_in_folder "${tag}" "$(notmuch config get user."${tag}")"
done <<eof
${tags}
eof

# When deleting emails straight from gmail (say on mobile), then they
# get given the "trashed" IMAP flag and are copied to the trash folder.
# As such, when we see such emails, we need to make sure they are
# properly deleted.
# These emails will be retagged below
while IFS= read -r file && [ -n "${file}" ];
do
    name="${file##*/}"
    # Get the IMAP flags
    flags="${name##*:}"
    directory=${file%%/${name}}
    # If its in the "new" directory, we need to set the flags ourselves
    if [ "${directory##*/}" = "new" ]; then flags="2,"; fi
    echo "Trashing ${file}"
    mv "${file}" "${dir}/${trash}/cur/$(uuidgen):${flags%%T}"
done <<eof
$(notmuch search --output=files tag:deleted and not folder:"\"${trash}\"" |
    grep -iv "${trash_re}")
eof

# Retag things that have been deleted
notmuch tag -archive -inbox -- tag:deleted and "(tag:archive or tag:inbox $(printf "${tags}" | sed 's/^/or tag:/'))"

[ -x "${dir}/.notmuch/hooks/${mbdir}.post-new" ] &&
    . "${dir}/.notmuch/hooks/${mbdir}.post-new"

notmuch new --no-hooks

count=$(notmuch count tag:unread)
[ "${count}" -gt 0 ] && ${notification} "${mbdir}: ${count} new emails" || true
