#!/bin/sh
# This file does some preprocessing for notmuch by putting some special tags
# in the correct maildir directories.

# It requires some special setup to work correctly:
#  - notmuch configurations are in .config/notmuch/{name}
#  - mail is kept in ..{name}
#  - the database path is in ..{name}/.notmuch
#  - the mbsync channel that needs to be run is called {name}
#  - if gmail is being used, `notmuch config set user.type gmail` has been run

# We get called in the hooks dir of the notmuch database path.
# Given that notmuch configurations are kept in `.config/notmuch/{name}`,
# we can use this information to get the database path (the same as when
# gotten by calling `notmuch config get database.path`) and the mbsync
# channel.
dir="${0%%/.notmuch/*}"
mbdir="${dir##*/}"
conf_file="${XDG_CONFIG_DIR:-${HOME}/.config}/notmuch/${mbdir}"
[ -f "${conf_file}" ] &&
    export NOTMUCH_CONFIG="${conf_file}"

# Are we using gmail or not?
gmail=$(notmuch config get user.type 2>/dev/null)

# The tag and folder that will be used for trash
trash=$(notmuch config get user.trash 2>/dev/null)
trash=${trash:-${gmail:+'[Gmail]/Trash'}}
trash=${trash:-'Trash'}
trash_re=$(notmuch config get user.trash_re 2>/dev/null)
trash_re=${trash_re:-$(notmuch config get user.trash 2>/dev/null)}
trash_re=${trash_re:-${gmail:+'\[Gmail\]/Trash'}}
trash_re=${trash_re:-'Trash'}

# The tag and folder that will be used for archiving
archive=$(notmuch config get user.archive 2>/dev/null)
archive=${archive:-${gmail:+'[Gmail]/All Mail'}}
archive=${archive:-'Archive'}
archive_re=$(notmuch config get user.archive_re 2>/dev/null)
archive_re=${archive_re:-$(notmuch config get user.archive 2>/dev/null)}
archive_re=${archive_re:-${gmail:+'\[Gmail\]/All Mail'}}
archive_re=${archive_re:-'Archive'}

# The folder that will be used for sent mail
sent=$(notmuch config get user.sent 2>/dev/null)
sent=${sent:-${gmail:+'[Gmail]/Sent Mail'}}
sent=${sent:-'Sent'}

tags="$(notmuch config get user.folder_tags 2>/dev/null)"

# Add a copy of all emails with a tag to a maildir folder
tag_to_folder() {
    # Usage: tag_to_folder "tag" "folder" "folder_re"
    folder="$2"
    folder_re="${3:-$folder}"
    tag="$1"
    while IFS= read -r message && [ -n "${message}" ];
    do
        files="$(notmuch search --output=files --exclude=false ${message})"
        existing="$(printf "${files}\n" | grep -i "${folder_re}")"
        if [ -z "${existing}" ];
        then
            file=$(printf "${files}\n" | head -n1)
            printf "Copying ${file} to ${folder}\n"
            name="${file##*/}"
            # Get the IMAP flags
            flags="${name##*:}"
            directory=${file%%/${name}}
            # If its in the "new" directory, we need to set the flags ourselves
            if [ "${directory##*/}" = "new" ]; then flags="2,"; fi
            cp -f "${file}" "${dir}/${folder}/cur/$(uuidgen):${flags%%T}"
        fi
    done <<eof
$(notmuch search --output=messages --exclude=false tag:${tag} and not folder:"\"${folder}\"")
eof
}

folder_prune() {
    # Usage: folder_prune "tag" "folder"
    folder="$2"
    tag="$1"
    while IFS= read -r file && [ -n "${file}" ];
    do
        case "${file}" in
            *"${folder}"*) # The folder needs to be quoted in case of special characters (e.g. `[]`)
                printf "Deleting ${file} -- doesn't have ${tag}\n"
                rm -f "${file}"
            ;;
        esac
    done <<eof
$(notmuch search --output=files --exclude=false folder:"\"${folder}\"" and not tag:${tag})
eof
}

tag_to_folder deleted "${trash}" "${trash_re}"
tag_to_folder inbox INBOX
tag_to_folder sent "${sent}"

while IFS= read -r tag && [ -n "${tag}" ];
do
    tag_to_folder "${tag}" "$(notmuch config get user."${tag}")" "$(notmuch config get user."${tag}_re" 2>/dev/null)"
done <<eof
${tags}
eof

# If it doesn't have a tag, then mark it as archived
notmuch tag +archive -- not tag:archive and not tag:inbox and not tag:deleted and not tag:sent $(printf "${tags}" | sed 's/^/and not tag:/')

tag_to_folder archive "${archive}" "${archive_re}"

folder_prune deleted "${trash}"
folder_prune inbox INBOX
while IFS= read -r tag && [ -n "${tag}" ];
do
    folder_prune "${tag}" "$(notmuch config get user."${tag}")"
done <<eof
${tags}
eof
[ -z "${gmail}" ] && folder_prune archive "${archive}"

mbsync "${mbdir}"
