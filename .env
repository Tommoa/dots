#!/bin/sh
# set the umask
umask 022

# Exec out to tmux if possible
{
    # Technically not strictly POSIX because "local", but `dash` supports it
    if [ -z "$SSH_CLIENT" -a -z "$VIMRUNTIME" -a -z "$TMUX" ]; then
        # Only launch TMUX if we're not in an SSH session
        # and we're not in a VIM session
        # and we're not already in a TMUX session
        local tmux=$(/usr/bin/env which tmux)
        [ -z $tmux ] && return
        local ns=$($tmux list-sessions | wc -l)
        if [ "$ns" -gt 0 ]; then
            exec $tmux attach
        else
            exec $tmux new-session
        fi
    fi
}

# A prompt for git
prompt_git() {
    blue="\033[38;5;4m"
    green="\033[38;5;85m"
    red="\033[38;5;1m"
    reset="\033[m"
    bold="\033[1m"

    if [ "$GIT_PROMPT" = "1" ] && git rev-parse --is-inside-work-tree -q >/dev/null 2>&1; then
        eval $(git diff-files --numstat -r 2>/dev/null | awk '{add+=$1; remove+=$2} END {printf "num_added='%d';num_removed='%d';total='%d';", add, remove, NR}')
        totals="";
        if [ "$total" -gt 0 ]; then
            totals="$bold:$blue$total"
            if [ "$num_added" -gt 0 ]; then
                totals="$totals$green+$num_added"
            fi
            if [ "$num_removed" -gt 0 ]; then
                totals="$totals$red-$num_removed"
            fi
        fi
        printf "$bold[$red$(git symbolic-ref --short -q HEAD 2>/dev/null || git rev-parse --short HEAD 2>/dev/null)$reset$totals$reset$bold] $reset"
    fi
}
blue="\033[38;5;4m"
green="\033[38;5;85m"
red="\033[38;5;1m"
cyan="\033[38;5;6m"
underline_cyan="\033[4;38;5;6m"
reset="\033[m"
bold="\033[1m"
PS1='$(printf "\033[1;38;5;85m$USER${SSH_CLIENT:+${red}@${underline_cyan}$(uname -n)}$reset$bold:\033[38;5;75m${PWD#$HOME/}$reset$bold#") $(prompt_git)'

# set some basic environment variables
export EDITOR=nvim
export PAGER=less
export LS_COLORS="pi=00;33:cd=01;33:di=01;34:so=01;31:ln=00;36:ex=01;32:bd=01;33:or=00;31:fi=00;00"
export PATH=~/.local/bin:~/bin:$PATH

# Set ls to being exa if possible
if which exa >/dev/null; then
    alias ls="exa --color=auto"
else
    alias ls="ls --color=auto"
fi

export CARGO_HOME="$HOME/.cargo"
export RUSTUP_HOME="$HOME/.rustup"

case $(uname) in
    FreeBSD)
        export CARGO_HOME="${CARGO_HOME}_freebsd"
        export RUSTUP_HOME= "${RUSTUP_HOME}_freebsd"
        ;;
esac
case $(uname -m) in
    (i386|i686)
        export CARGO_HOME="${CARGO_HOME}_x32"
        export RUSTUP_HOME="${CARGO_HOME}_x32"
        ;;
esac

if [ -e $CARGO_HOME/env ]
then
    . $CARGO_HOME/env
fi

if [ -e $CARGO_HOME/bin ]
then
    export PATH=$CARGO_HOME/bin:$PATH
fi

# A function to switch to a specific directory/tmux session
mux() {
    local tmux=$(env which tmux)
    local fd=$(env which find)
    [ -z $tmux ] && return
    [ -z $fd ] && return
    local dir=$($fd ~/Documents -type d -iname "$1" | awk -F'/' 'NR==1{n=NF; m=$0} NF<n{ m=$0; n=NF } END { print m }')
    $tmux if-shell                      \
        "$tmux has-session -t $1" \
        "switch-client -t $1"     \
        "new-session -ds $1 -c $dir; switch-client -t $1"
}

alias tls="tmux list-sessions"

stty -ixon
export GIT_PROMPT=1
